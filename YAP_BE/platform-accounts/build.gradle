plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.5'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'checkstyle'
    id "jacoco"
    id "org.sonarqube" version "4.0.0.2929"
    id "io.freefair.lombok" version "8.0.1"
}

group = 'com.yap'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

allprojects {
    repositories {
        mavenCentral()
    }
}

bootJar {
    enabled = false
}

jar {
    enabled = false
}

wrapper {
    gradleVersion = '8.0.2'
}

subprojects {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'java'
    apply plugin: 'checkstyle'
    apply plugin: 'jacoco'
    apply plugin: 'org.sonarqube'
    apply plugin: 'io.freefair.lombok'

    bootJar {
        enabled = true
    }

    jar {
        enabled = false
    }

    ext {
        springCloudDependenciesVersion = '2022.0.1'
        springOpenApiVersion = '2.0.4'
        liquidbaseVersion = '4.12.0'
    }

    dependencies {
        implementation 'com.yap:platform-common:1.0.9'
        implementation 'com.yap:platform-security:1.0.4'

        implementation 'org.springframework.boot:spring-boot-starter-validation'
        implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        implementation "org.liquibase:liquibase-core"


        runtimeOnly 'com.mysql:mysql-connector-j'

        testImplementation 'com.h2database:h2'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'org.springframework.security:spring-security-test'
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudDependenciesVersion}"
        }
    }

    test {
        useJUnitPlatform()
    }

    checkstyle {
        configFile = file("${projectDir}/../config/checkstyle/checkstyle.xml")
    }

    checkstyleMain {
        source = 'src/main/java'
    }

    checkstyleTest {
        source = 'src/test/java'
    }

    jacocoTestReport {
        reports {
            xml {
                enabled true
            }
        }
    }

    sonarqube {
        properties {
            property "sonar.sources", "src/main"
            property "sonar.tests", "src/test"
        }
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }
}


tasks.named('test') {
    useJUnitPlatform()
}